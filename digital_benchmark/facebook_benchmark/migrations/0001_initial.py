# Generated by Django 2.2.4 on 2019-08-07 07:50

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CommentReaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated_at', models.DateTimeField(auto_now=True)),
                ('from_id', models.CharField(max_length=255)),
                ('reaction_type', models.CharField(choices=[('ANGRY', 'Angry'), ('HAHA', 'Haha'), ('LIKE', 'Like'), ('LOVE', 'Love'), ('NONE', 'None'), ('SAD', 'Sad'), ('WOW', 'Wow')], max_length=5)),
            ],
            options={
                'verbose_name': 'Comment Reaction',
                'verbose_name_plural': 'Comment Reactions',
            },
        ),
        migrations.CreateModel(
            name='FacebookProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated_at', models.DateTimeField(auto_now=True)),
                ('access_token', models.TextField(null=True)),
                ('expires_in', models.IntegerField(null=True)),
                ('facebook_id', models.CharField(max_length=255)),
                ('first_name', models.CharField(max_length=255, null=True)),
                ('last_name', models.CharField(max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Facebook Profile',
                'verbose_name_plural': 'Facebook Profiles',
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated_at', models.DateTimeField(auto_now=True)),
                ('access_token', models.TextField(null=True)),
                ('displayed_message_response_time', models.CharField(max_length=255, null=True)),
                ('num_engagements', models.IntegerField(null=True, verbose_name='total engagements')),
                ('fan_count', models.IntegerField(null=True)),
                ('name', models.CharField(max_length=255, null=True)),
                ('overall_star_rating', models.DecimalField(decimal_places=1, max_digits=2, null=True)),
                ('page_consumptions', models.IntegerField(null=True)),
                ('page_engaged_users', models.IntegerField(null=True)),
                ('page_id', models.CharField(max_length=255)),
                ('page_impressions', models.IntegerField(null=True)),
                ('page_impressions_nonviral', models.IntegerField(null=True)),
                ('page_impressions_nonviral_unique', models.IntegerField(null=True)),
                ('page_impressions_organic', models.IntegerField(null=True)),
                ('page_impressions_organic_unique', models.IntegerField(null=True)),
                ('page_impressions_paid', models.IntegerField(null=True)),
                ('page_impressions_paid_unique', models.IntegerField(null=True)),
                ('page_impressions_unique', models.IntegerField(null=True)),
                ('page_impressions_viral', models.IntegerField(null=True)),
                ('page_impressions_viral_unique', models.IntegerField(null=True)),
                ('page_negative_feedback', models.IntegerField(null=True)),
                ('page_negative_feedback_unique', models.IntegerField(null=True)),
                ('page_post_engagements', models.IntegerField(null=True)),
                ('page_video_views', models.IntegerField(null=True)),
                ('page_views_total', models.IntegerField(null=True)),
                ('rating_count', models.IntegerField(null=True)),
                ('talking_about_count', models.IntegerField(null=True)),
                ('unread_message_count', models.IntegerField(null=True)),
                ('unread_notif_count', models.IntegerField(null=True, verbose_name='unread notification count')),
                ('unseen_message_count', models.IntegerField(null=True)),
                ('verification_status', models.CharField(max_length=255, null=True)),
                ('facebook_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='facebook_benchmark.FacebookProfile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PostReaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated_at', models.DateTimeField(auto_now=True)),
                ('from_id', models.CharField(max_length=255)),
                ('reaction_type', models.CharField(choices=[('ANGRY', 'Angry'), ('HAHA', 'Haha'), ('LIKE', 'Like'), ('LOVE', 'Love'), ('NONE', 'None'), ('SAD', 'Sad'), ('WOW', 'Wow')], max_length=5)),
            ],
            options={
                'verbose_name': 'Post Reaction',
                'verbose_name_plural': 'Post Reactions',
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated_at', models.DateTimeField(auto_now=True)),
                ('created_time', models.DateTimeField()),
                ('rating', models.SmallIntegerField(blank=True, null=True)),
                ('recommendation_type', models.CharField(choices=[('NEGATIVE', 'Negative'), ('NONE', 'None'), ('POSITIVE', 'Positive')], max_length=8)),
                ('review_text', models.TextField(blank=True, null=True)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='facebook_benchmark.Page')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated_at', models.DateTimeField(auto_now=True)),
                ('backdated_time', models.DateTimeField(blank=True, null=True)),
                ('created_time', models.DateTimeField(null=True)),
                ('is_eligible_for_promotion', models.BooleanField(null=True)),
                ('is_expired', models.BooleanField(null=True)),
                ('is_hidden', models.BooleanField(null=True)),
                ('is_instagram_eligible', models.BooleanField(null=True)),
                ('is_popular', models.BooleanField(null=True)),
                ('is_published', models.BooleanField(null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('post_clicks', models.IntegerField(null=True)),
                ('post_clicks_unique', models.IntegerField(null=True)),
                ('post_engaged_fan', models.IntegerField(null=True)),
                ('post_engaged_users', models.IntegerField(null=True)),
                ('post_id', models.CharField(max_length=255, null=True)),
                ('post_impressions', models.IntegerField(null=True)),
                ('post_impressions_fan', models.IntegerField(null=True)),
                ('post_impressions_fan_paid', models.IntegerField(null=True)),
                ('post_impressions_fan_paid_unique', models.IntegerField(null=True)),
                ('post_impressions_fan_unique', models.IntegerField(null=True)),
                ('post_impressions_nonviral', models.IntegerField(null=True)),
                ('post_impressions_nonviral_unique', models.IntegerField(null=True)),
                ('post_impressions_organic', models.IntegerField(null=True)),
                ('post_impressions_organic_unique', models.IntegerField(null=True)),
                ('post_impressions_paid', models.IntegerField(null=True)),
                ('post_impressions_unique', models.IntegerField(null=True)),
                ('post_impressions_viral', models.IntegerField(null=True)),
                ('post_impressions_viral_unique', models.IntegerField(null=True)),
                ('post_negative_feedback', models.IntegerField(null=True)),
                ('post_negative_feedback_unique', models.IntegerField(null=True)),
                ('promotion_status', models.CharField(max_length=255)),
                ('scheduled_publish_time', models.DateTimeField(blank=True, null=True)),
                ('shares', models.IntegerField(null=True)),
                ('story', models.TextField(blank=True, null=True)),
                ('timeline_visibility', models.CharField(choices=[('HIDDEN', 'Hidden'), ('NORMAL', 'Normal'), ('FORCED_ALLOW', 'Forced Allow')], max_length=12, null=True)),
                ('updated_time', models.DateTimeField(null=True)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='facebook_benchmark.Page')),
                ('reactions', models.ManyToManyField(blank=True, to='facebook_benchmark.PostReaction')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated_at', models.DateTimeField(auto_now=True)),
                ('comment_id', models.CharField(max_length=255)),
                ('created_time', models.DateTimeField()),
                ('from_id', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='facebook_benchmark.Post')),
                ('reactions', models.ManyToManyField(blank=True, to='facebook_benchmark.CommentReaction')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
